<?php

//
// ZoneMinder web configuration file, $Date$, $Revision$
// Copyright (C) 2002  Philip Coombes
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
//

// This section contains options substituted by the zmconfig.pl utility, do not edit these directly
//
define( "ZM_DB_SERVER", "<from zmconfig>" );			// Database Server machine
define( "ZM_DB_NAME", "<from zmconfig>" );				// Database containing the tables
define( "ZM_DB_USERA", "<from zmconfig>" );				// Database login
define( "ZM_DB_PASSA", "<from zmconfig>" );				// Database password
define( "ZM_PATH_EVENTS", "<from zmconfig>" );			// Local relative path to where events directory lives
define( "ZM_PATH_CAMBOZOLA", "<from zmconfig>" );		// Path to (optional) cambozola java streaming client (recommended)
define( "ZM_PATH_MPEG_ENCODE", "<from zmconfig>" );		// Path to (optional) mpeg video encoder
define( "ZM_PATH_NETPBM", "<from zmconfig>" );			// Path to (optional) Netpbm utilities
define( "ZM_WEB_POPUP_ON_ALARM", <from zmconfig> );		// Whether the watch window jumps to front if an alarm occurs
define( "ZM_WEB_SOUND_ON_ALARM", <from zmconfig> );		// Whether the watch window jumps to front if an alarm occurs
define( "ZM_WEB_ALARM_SOUND", <from zmconfig> );		// A sound to play on alarm, put this in the sounds directory
define( "ZM_OPT_FAST_DELETE", <from zmconfig> );		// Whether we only delete event DB records and leave zmaudit to do the rest
define( "ZM_OPT_X10", <from zmconfig> );				// Whether we want to interface with X10 devices

// Bandwidth specific ones from zmconfig.pl, again do not edit these directly as changes may be lost
//
define( "ZM_WEB_H_REFRESH_MAIN", <from zmconfig> );		// How often (in seconds) the main console window refreshes
define( "ZM_WEB_H_REFRESH_CYCLE", <from zmconfig> );	// How often the cycle watch windows swaps to the next monitor
define( "ZM_WEB_H_REFRESH_IMAGE", <from zmconfig> );	// How often the watched image is refreshed (if not streaming)
define( "ZM_WEB_H_REFRESH_STATUS", <from zmconfig> );	// How often the little status frame refreshes itself in the watch window
define( "ZM_WEB_H_REFRESH_EVENTS", <from zmconfig> );	// How often the event listing is refreshed in the watch window, only for recent events
define( "ZM_WEB_H_STREAM_IDLE_DELAY", <from zmconfig> );// How long (in milliseconds) between streamed frames in the watch window
define( "ZM_WEB_H_STREAM_FRAME_DELAY", <from zmconfig> );// How long (in milliseconds) to wait before looking for the next streamed frame
define( "ZM_WEB_H_STREAM_EVENT_DELAY", <from zmconfig> );// How long (in milliseconds) to wait between each frame when streaming events
define( "ZM_WEB_H_IMAGE_SCALING", <from zmconfig> );	// Image scaling for thumbnails, bandwidth versus cpu in rescaling
define( "ZM_WEB_M_REFRESH_MAIN", <from zmconfig> );		// How often (in seconds) the main console window refreshes
define( "ZM_WEB_M_REFRESH_CYCLE", <from zmconfig> );	// How often the cycle watch windows swaps to the next monitor
define( "ZM_WEB_M_REFRESH_IMAGE", <from zmconfig> );	// How often the watched image is refreshed (if not streaming)
define( "ZM_WEB_M_REFRESH_STATUS", <from zmconfig> );	// How often the little status frame refreshes itself in the watch window
define( "ZM_WEB_M_REFRESH_EVENTS", <from zmconfig> );	// How often the event listing is refreshed in the watch window, only for recent events
define( "ZM_WEB_M_STREAM_IDLE_DELAY", <from zmconfig> );// How long (in milliseconds) between streamed frames in the watch window
define( "ZM_WEB_M_STREAM_FRAME_DELAY", <from zmconfig> );// How long (in milliseconds) to wait before looking for the next streamed frame
define( "ZM_WEB_M_STREAM_EVENT_DELAY", <from zmconfig> );// How long (in milliseconds) to wait between each frame when streaming events
define( "ZM_WEB_M_IMAGE_SCALING", <from zmconfig> );	// Image scaling for thumbnails, bandwidth versus cpu in rescaling
define( "ZM_WEB_L_REFRESH_MAIN", <from zmconfig> );		// How often (in seconds) the main console window refreshes
define( "ZM_WEB_L_REFRESH_CYCLE", <from zmconfig> );	// How often the cycle watch windows swaps to the next monitor
define( "ZM_WEB_L_REFRESH_IMAGE", <from zmconfig> );	// How often the watched image is refreshed (if not streaming)
define( "ZM_WEB_L_REFRESH_STATUS", <from zmconfig> );	// How often the little status frame refreshes itself in the watch window
define( "ZM_WEB_L_REFRESH_EVENTS", <from zmconfig> );	// How often the event listing is refreshed in the watch window, only for recent events
define( "ZM_WEB_L_STREAM_IDLE_DELAY", <from zmconfig> );// How long (in milliseconds) between streamed frames in the watch window
define( "ZM_WEB_L_STREAM_FRAME_DELAY", <from zmconfig> );// How long (in milliseconds) to wait before looking for the next streamed frame
define( "ZM_WEB_L_STREAM_EVENT_DELAY", <from zmconfig> );// How long (in milliseconds) to wait between each frame when streaming events
define( "ZM_WEB_L_IMAGE_SCALING", <from zmconfig> );	// Image scaling for thumbnails, bandwidth versus cpu in rescaling
define( "ZM_WEB_P_REFRESH_MAIN", <from zmconfig> );		// How often (in seconds) the main console window refreshes
define( "ZM_WEB_P_REFRESH_IMAGE", <from zmconfig> );	// How often the watched image is refreshed (if not streaming)

// This section is options normally derived from other options or configuration
//
define( "ZM_DB_USER", ZM_DB_USERA );					// Database login
define( "ZM_DB_PASS", ZM_DB_PASSA );					// Database password
define( "ZM_PATH", "@prefix@/bin" );					// Local path to the general ZoneMonitor executables
define( "ZMU_PATH", ZM_PATH."/zmu" );					// Local path to the ZoneMinder Utility
define( "ZMS_PATH", "/cgi-bin/zms" );					// Web path to the ZoneMinder Stream server
define( "ZMS_EVENT_PATH", "@WEB_PREFIX@/".ZM_PATH_EVENTS );	// Full path (not web) to where events directory lives

// These are miscelleaneous options you won't normally need to change
//
define( "MAX_EVENTS", 12 );								// The maximum number of events to show in the monitor event listing
define( "EVENT_HEADER_LINES", 25 );						// How many events are listed in the event window before a new header is inserted
define( "LEARN_MODE", false );							// Currently unimplemented, do not change

switch ( $bandwidth )
{
	case "high" :
	{
		define( "REFRESH_MAIN", ZM_WEB_H_REFRESH_MAIN );				// How often (in seconds) the main console window refreshes
		define( "REFRESH_CYCLE", ZM_WEB_H_REFRESH_CYCLE );				// How often the cycle watch windows swaps to the next monitor
		define( "REFRESH_IMAGE", ZM_WEB_H_REFRESH_IMAGE );				// How often the watched image is refreshed (if not streaming)
		define( "REFRESH_STATUS", ZM_WEB_H_REFRESH_STATUS );			// How often the little status frame refreshes itself in the watch window
		define( "REFRESH_EVENTS", ZM_WEB_H_REFRESH_EVENTS );			// How often the event listing is refreshed in the watch window, only for recent events
		define( "STREAM_IDLE_DELAY", ZM_WEB_H_STREAM_IDLE_DELAY );		// How long (in milliseconds) between streamed frames in the watch window
		define( "STREAM_FRAME_DELAY", ZM_WEB_H_STREAM_FRAME_DELAY );	// How long (in milliseconds) to wait before looking for the next streamed frame
		define( "STREAM_EVENT_DELAY", ZM_WEB_H_STREAM_EVENT_DELAY );	// How long (in milliseconds) to wait between each frame when streaming events
		define( "IMAGE_SCALING", ZM_WEB_H_IMAGE_SCALING );				// Image scaling for thumbnails, bandwidth versus cpu in rescaling
		break;
	}
	case "medium" : 
	{
		define( "REFRESH_MAIN", ZM_WEB_M_REFRESH_MAIN );				// How often (in seconds) the main console window refreshes
		define( "REFRESH_CYCLE", ZM_WEB_M_REFRESH_CYCLE );				// How often the cycle watch windows swaps to the next monitor
		define( "REFRESH_IMAGE", ZM_WEB_M_REFRESH_IMAGE );				// How often the watched image is refreshed (if not streaming)
		define( "REFRESH_STATUS", ZM_WEB_M_REFRESH_STATUS );			// How often the little status frame refreshes itself in the watch window
		define( "REFRESH_EVENTS", ZM_WEB_M_REFRESH_EVENTS );			// How often the event listing is refreshed in the watch window, only for recent events
		define( "STREAM_IDLE_DELAY", ZM_WEB_M_STREAM_IDLE_DELAY );		// How long (in milliseconds) between streamed frames in the watch window
		define( "STREAM_FRAME_DELAY", ZM_WEB_M_STREAM_FRAME_DELAY );	// How long (in milliseconds) to wait before looking for the next streamed frame
		define( "STREAM_EVENT_DELAY", ZM_WEB_M_STREAM_EVENT_DELAY );	// How long (in milliseconds) to wait between each frame when streaming events
		define( "IMAGE_SCALING", ZM_WEB_M_IMAGE_SCALING );				// Image scaling for thumbnails, bandwidth versus cpu in rescaling
		break;
	}
	case "low" :
	{
		define( "REFRESH_MAIN", ZM_WEB_L_REFRESH_MAIN );				// How often (in seconds) the main console window refreshes
		define( "REFRESH_CYCLE", ZM_WEB_L_REFRESH_CYCLE );				// How often the cycle watch windows swaps to the next monitor
		define( "REFRESH_IMAGE", ZM_WEB_L_REFRESH_IMAGE );				// How often the watched image is refreshed (if not streaming)
		define( "REFRESH_STATUS", ZM_WEB_L_REFRESH_STATUS );			// How often the little status frame refreshes itself in the watch window
		define( "REFRESH_EVENTS", ZM_WEB_L_REFRESH_EVENTS );			// How often the event listing is refreshed in the watch window, only for recent events
		define( "STREAM_IDLE_DELAY", ZM_WEB_L_STREAM_IDLE_DELAY );		// How long (in milliseconds) between streamed frames in the watch window
		define( "STREAM_FRAME_DELAY", ZM_WEB_L_STREAM_FRAME_DELAY );	// How long (in milliseconds) to wait before looking for the next streamed frame
		define( "STREAM_EVENT_DELAY", ZM_WEB_L_STREAM_EVENT_DELAY );	// How long (in milliseconds) to wait between each frame when streaming events
		define( "IMAGE_SCALING", ZM_WEB_L_IMAGE_SCALING );				// Image scaling for thumbnails, bandwidth versus cpu in rescaling
		break;
	}
	case "mobile" : // Very incomplete at present
	{
		define( "REFRESH_MAIN", ZM_WEB_P_REFRESH_MAIN );				// How often (in seconds) the main console window refreshes
		define( "REFRESH_IMAGE", ZM_WEB_P_REFRESH_IMAGE );				// How often the watched image is refreshed (if not streaming)
		break;
	}
}

// Javascript window sizes
$jws = array( 
	'console' => array( 'w'=>720, 'h'=>400 ),
	'cycle' => array( 'w'=>36, 'h'=>72 ),
	'monitor' => array( 'w'=>360, 'h'=>450 ),
	'watch' => array( 'w'=>72, 'h'=>360 ),
	'device' => array( 'w'=>196, 'h'=>164 ),
	'function' => array( 'w'=>248, 'h'=>72 ),
	'events' => array( 'w'=>720, 'h'=>480 ),
	'event' => array( 'w'=>420, 'h'=>500 ),
	'filter' => array( 'w'=>560, 'h'=>250 ),
	'filtersave' => array( 'w'=>520, 'h'=>180 ),
	'zones' => array( 'w'=>72, 'h'=>232 ),
	'zone' => array( 'w'=>360, 'h'=>480 ),
	'video' => array( 'w'=>100, 'h'=>80 ),
	'image' => array( 'w'=>48, 'h'=>72 ),
);
?>
